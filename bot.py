# -*- coding: utf-8 -*-
import os
import telebot
import time
import random
import threading
from emoji import emojize
from telebot import types
from pymongo import MongoClient
import game
import units
from tools import medit
import traceback
from telebot import types


token = os.environ['TELEGRAM_TOKEN']
bot = telebot.TeleBot(token)

lobbys={}
codes=[]

client=MongoClient(os.environ['database'])
db=client.middleagewars
users=db.users

lvls={
    '1':10,
    '2':35,
    '3':100,
    '4':146,
    '5':223,
    '6':349,
    '7':611,
    '8':928,
    '9':1310,
    '10':1700,
    '11':2241,
    '12':2696,
    '13':3200,
    '14':3781,
    '15':4499
}


allids=-1

try:
    pass

except Exception as e:
    print('–û—à–∏–±–∫–∞:\n', traceback.format_exc())
    bot.send_message(441399484, traceback.format_exc())

    

@bot.message_handler(commands=['start'])
def start(m):
    tutorial=0
    if m.from_user.id==m.chat.id:
        if users.find_one({'id':m.from_user.id})==None:
            users.insert_one(createuser(m.from_user))
            tutorial=1
        user=users.find_one({'id':m.from_user.id})
        if tutorial==1:
            bot.send_message(m.chat.id, '–ó–¥—Ä–∞—Å—Ç–≤—É–π, –±–æ–µ—Ü! –ü—Ä–æ–∫–∞—á–∏–≤–∞–π —Å–≤–æ–∏ –±–æ–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏, –∏ —Ç–æ–≥–¥–∞ —Ç—ã, –≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã–∂–∏–≤–µ—à—å... –ê \n'+
                            '–º–æ–∂–µ—Ç –∏ –æ–±—Ä–µ—Ç—ë—à—å –±–æ–≥–∞—Ç—Å—Ç–≤–æ —Å–ª–∞–≤—É!')
        mainmenu(user)
        
  
@bot.message_handler(commands=['join'])
def join(m):
    print(lobbys)
    user=users.find_one({'id':m.from_user.id})
    try:
        i=m.text.split(' ')[1]
        for ids in lobbys:
            l=lobbys[ids]
            if l['code']==i:
                l['users'].append(user)
                bot.send_message(m.from_user.id, '–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!')
    except Exception as e:
        bot.send_message(441399484, traceback.format_exc())
        

@bot.message_handler(commands=['testlobby'])
def testduel(m):
    x=createlobby(m.chat.id)
    lobbys.update(x)
    for ids in x:
        code=x[ids]['code']
    bot.send_message(m.chat.id, '–õ–æ–±–±–∏ —Å–æ–∑–¥–∞–Ω–æ! –ö–æ–¥:\n`'+code+'`', parse_mode='markdown')

    
@bot.message_handler(commands=['beginlobby'])
def beginlobby(m):
    try:
        fighters={}
        i=m.text.split(' ')[1]
        ct=1
        for ids in lobbys[i]['users']:
            if ids['battlename']==None:
                name=ids['name'][:12]
            else:
                name=ids['battlename']
            fighters.update({ids['id']:{'fighter':ids,
                                   'team':ct,
                                    'id':ids['id'],
                                    'name':name
                             }
                        })
            ct+=1
        del lobbys[i]
        game.Game(fighters)
        
    except Exception as e:
        bot.send_message(441399484, traceback.format_exc())
        

def createlobby(id):
    rc=randomcode(codes)
    return{rc:{'id':id,
           'code':rc,
           'users':[]
          }}
    
           
def randomcode(x):
    i=0
    txt=''
    while i<7:
        txt+=str(random.randint(1,9))
        i+=1
    while txt in x:
        i=0
        txt=''
        while i<7:
            txt+=str(random.randint(1,9))
            i+=1
    codes.append(txt)
    return txt
        
           
@bot.message_handler()
def messages(m):
    if m.from_user.id==m.chat.id:
        user=users.find_one({'id':m.from_user.id})
        if user['status']=='free':
            text=''
            if m.text=='üëÅ–†–∞–∑–≤–µ–¥–∫–∞':
                kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
                kb.add(types.KeyboardButton('üå≤–õ–µ—Å'))
                text+='(‚ö°Ô∏è)–õ–µ—Å - –±–ª–∏–∂–∞–π—à–∏–π –∫ –≤–∞–º –ª–µ—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ —Ç–∞–∫ —É–∂ –∏ –¥–∞–ª–µ–∫–æ.\n\n'
                if user['lvl']>=5:
                    kb.add(types.ReplyKeyboardButton('üèî–ì–æ—Ä—ã'))
                    text+='(‚ö°Ô∏è‚ö°Ô∏è)–ì–æ—Ä—ã - –ø–æ–¥—ä–µ–º –≤ –≥–æ—Ä—É —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ —Å–∏–ª, –Ω–æ —Ç–∞–º –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤–µ—â–∏ –ø–æ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ, —á–µ–º –≤ –ª–µ—Å—É.\n\n'
                kb.add(types.KeyboardButton('–ù–∞–∑–∞–¥'))
                bot.send_message(m.chat.id, '–í—ã –≤—ã—Ö–æ–¥–∏—Ç–µ –∏–∑ —Å–≤–æ–µ–≥–æ –¥–æ–º–∞ –∏ –¥—É–º–∞–µ—Ç–µ, –∫—É–¥–∞ –±—ã –Ω–∞–ø—Ä–∞–≤–∏—Ç—å—Å—è.\n\n'+text, reply_markup=kb)
                
            elif m.text=='üå≤–õ–µ—Å':
                if user['energy']>=1:
                    users.update_one({'id':m.from_user.id},{'$inc':{'energy':-1}})
                    users.update_one({'id':m.from_user.id},{'$set':{'status':'busy'}})
                    t=threading.Timer(300, forest, args=[user])
                    t.start()
                    bot.send_message(m.from_user.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –ª–µ—Å. –í–µ—Ä–Ω—ë—Ç–µ—Å—å —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.')
                    mainmenu(user)
                    
            elif m.text=='‚öîÔ∏è–ë–∏—Ç–≤—ã':
                text=''
                kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
                kb.add(types.KeyboardButton('üíÄ–ò—Å–∫–∞—Ç—å –º–æ–Ω—Å—Ç—Ä–æ–≤'))
                text+='üíÄ–ü–æ–∏—Å–∫ –º–æ–Ω—Å—Ç—Ä–æ–≤ - –ø–æ–±–µ–∂–¥–∞—è –º–æ–Ω—Å—Ç—Ä–æ–≤, –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –º–Ω–æ–≥–æ –æ–ø—ã—Ç–∞, –∞ –µ—Å–ª–∏ –ø–æ–≤–µ–∑—ë—Ç - –∂–∏—Ç–µ–ª–∏ –±–ª–∏–∂–∞–π—à–µ–π –¥–µ—Ä–µ–≤–Ω–∏ –æ—Ç—Å—ã–ø—è—Ç '+\
                '–≤–∞–º –Ω–µ–º–Ω–æ–≥–æ —Å–µ—Ä–µ–±—Ä–∞!\n\n'
                if user['lvl']>=5:
                    kb.add(types.KeyboardButton('üÜö–ò—Å–∫–∞—Ç—å –¥—Ä—É–≥–∏—Ö –±–æ–π—Ü–æ–≤'))
                    text+='üÜö–ò—Å–∫–∞—Ç—å –¥—Ä—É–≥–∏—Ö –±–æ–π—Ü–æ–≤ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.'
                kb.add(types.KeyboardButton('–ù–∞–∑–∞–¥'))
                bot.send_message(m.chat.id, '–ñ–∏–≤–∏ –æ—Ö–æ—Ç–æ–π –∏–ª–∏ —É–º—Ä–∏ –¥–æ–±—ã—á–µ–π! –£—á–∞—Å—Ç–≤—É—è –≤ —Å—Ä–∞–∂–µ–Ω–∏—è—Ö, '+
                                 '–≤—ã –±—É–¥–µ—Ç–µ –æ–±—Ä–µ—Ç–∞—Ç—å —Å–ª–∞–≤—É –∏ —Ü–µ–Ω–Ω–µ–π—à–∏–π –æ–ø—ã—Ç!\n\n'+text, reply_markup=kb)
                
            elif m.text=='üíÄ–ò—Å–∫–∞—Ç—å –º–æ–Ω—Å—Ç—Ä–æ–≤':
                users.update_one({'id':m.from_user.id},{'$set':{'status':'busy'}})
                players=[user]
                t=threading.Timer(120, findmonster, args=[players])
                t.start()
                
            elif m.text=='–ù–∞–∑–∞–¥':
                mainmenu(user)
                
        else:
            bot.send_message(m.chat.id, '–í—ã –∑–∞–Ω—è—Ç—ã!')
                    
         
def findmonster(players):           # –ü–ª–∞–Ω—ã: —Å–¥–µ–ª–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª—É—á–∞–π–Ω–æ–º—É –∏–≥—Ä–æ–∫—É –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤ –±–æ–π —Å–≤–æ–µ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º
    mcount=1
    monsters=[]
    allm=['bear']
    while len(monsters)<mcount:
        monster=random.choice(allm)
        monsters.append(monster)
        
    for ids in players:
        bot.send_message(ids['id'], '–í—ã –Ω–∞—à–ª–∏ –ª–æ–≥–æ–≤–æ –º–æ–Ω—Å—Ç—Ä–æ–≤! –ü–æ—Å–º–æ—Ç—Ä–∏–º, –∫—Ç–æ –∂–µ —Ç–∞–º –æ–±–∏—Ç–∞–µ—Ç...')
    fighters={}
    ct=1
    for ids in players: 
        if ids['battlename']==None:
            name=ids['name'][:12]
        else:
            name=ids['battlename']
        fighters.update({ids['id']:{'fighter':ids,
                                   'team':ct,
                                   'id':ids['id'],
                                   'name':name
                                   }
                        })
    ct=2
    for ids in monsters:
        idd=createid()
        fighters.update({idd:{'fighter':ids,
                                   'team':ct,
                                    'id':idd
                             }
                        })
    game.Game(fighters)
        
        
   
def createid():
    global allids
    allids-=1
    return allids

        
def mainmenu(user):
    kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton('‚öîÔ∏è–ë–∏—Ç–≤—ã'), types.KeyboardButton('üëÅ–†–∞–∑–≤–µ–¥–∫–∞'))
    bot.send_message(user['id'], 'üè°–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=kb)
        
        
                
def forest(user):
    actions=['test']
    act=random.choice(actions)
    exp=0
    siler=0
    if act=='test':
        exp=1
        silver=1
        text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∏–∑ –ª–µ—Å–∞.\n\n–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:\n'
    users.update_one({'id':user['id']},{'$inc':{'siler':silver, 'exp':exp}})
    users.update_one({'id':user['id']},{'$set':{'status':'free'}})
    if exp>0:
        text+='‚≠êÔ∏è–û–ø—ã—Ç: '+str(exp)+'\n'
    if silver>0:
        text+='üí∞–°–µ—Ä–µ–±—Ä–æ: '+str(silver)+'\n'
    bot.send_message(user['id'], text)
        
        
@bot.callback_query_handler(func=lambda call:True)
def inline(call): 
    cgame=None
    for ids in game.games:
        g=game.games[ids]
        if call.from_user.id in g.players:
            cgame=g
            try:
                cunit=cgame.players[cgame.currentplayer.id]
            except:
                cunit=None
    if cgame!=None and cunit!=None:
        if cunit.id==call.from_user.id:
            if call.data=='endturn':
                cgame.timer.cancel()
                medit('–í—ã–±—Ä–∞–Ω–æ: –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ö–æ–¥.', call.message.chat.id, call.message.message_id)
                cgame.endturn()
            if call.data=='p_attack':
                units.choicetarget(cunit)
                
            if 'atk' in call.data:
                cgame.currentplayer=None
                medit('–í—ã–±—Ä–∞–Ω–æ: –∞—Ç–∞–∫–∞.', call.message.chat.id, call.message.message_id)
                t=int(call.data.split(' ')[1])
                target=findunit(cgame, t)
                target.recievehit(cunit)
                cgame.endturn()
        else:
            bot.answer_callback_query(call.id, '–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!')
        
def findunit(gamee, id):
    for ids in gamee.players:
        if gamee.players[ids].id==id:
            return gamee.players[ids]
    
def createuser(user):
    return {
        'id':user.id,
        'name':user.first_name,
        'username':user.username,
        'type':'basic',
        'energy':4,
        'maxenergy':4,
        'status':'free',
        'stats':{
            'dmg':[0, 0],
            'agility':0,
            'hp':0,
            'luck':0
        
        },
        'equipment':{
            'righthand':None,
            'lefthand':None,
            'head':None,
            'body':None
        
        },
        'silver':0,
        'exp':0,
        'lvl':1,
        'battlename':None
    }
    
    
    
users.update_many({},{'$set':{'status':'free'}}) 
print('7777')
bot.polling(none_stop=True,timeout=600)

