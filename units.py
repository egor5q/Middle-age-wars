


classes=['warrior', 'bower', 'mage', 'assasin', 'basic']



class Unit:
    
    def __init__(self):
        self.hp=200
        self.team=None
        self.id=None
        self.dmg=[16, 28]
        self.luck=50
        self.controller=None
        self.body={
            'righthand':None,
            'lefthand':None,
            'head':None,
            'body':None
            
        }
        self.dmgbuff=[0, 0]
        self.mainhand='righthand'
        self.inentory=[]
        self.class='basic'
        self.mana=300
        self.skills=[]
        self.speedregen=400
        self.speed=self.speedregen
        self.weight=400     # –í —Ö–æ–¥ —É —é–Ω–∏—Ç–∞ —Ä–µ–≥–µ–Ω–∏—Ç—Å—è (self.speedregen) —Å–∫–æ—Ä–æ—Å—Ç–∏. –ù–∞ —Ö–æ–¥ —é–Ω–∏—Ç —Ç—Ä–∞—Ç–∏ (self.weight) —Å–∫–æ—Ä–æ—Å—Ç–∏. 
        self.agility=50     # –£ –∫–æ–≥–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ–ª—å—à–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ - —Ç–æ—Ç —Ö–æ–¥–∏—Ç. –ï—Å–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ - —Ä–∞–Ω–¥–æ–º.
    
    
    def recievedmg(self, unit, weapon):
        pass
    
    
    def attack(self, target):
        pass
    
    
    def endturn(self):
        pass
    
    
    def turn(self, game):
        if self.controller=='player':
            attackmenu(self)
    
    def changedmg(dmg, coef):
        result=[]
        result.append(int(dmg[0]*coef))
        result.append(int(dmg[1]*coef))
        return result
    
    def changecoef(stat, coef):
        return stat*coef
        
    
    
class Warrior(Unit):
    
    def __init__(self):
        super().__init__()
        self.hp=int(self.hp*1.35)
        self.dmg=self.changedmg(self.dmg, 0.75)
        self.class='warrior'
        self.agility=int(self.agility*0.7)
    
   
def handtotext(x):
    if x=='righthand':
        return '–ü—Ä–∞–≤–∞—è'
    elif x=='lefthand':
        return '–õ–µ–≤–∞—è'
    
    
def armortoname(x):
    if x==None:
        return '–ù–∏—á–µ–≥–æ'
    
def attackmenu(player):
    text=''
    text+='‚ô•Ô∏è–•–ø: '+str(player.hp)+'\n'
    text+='üí¢–£—Ä–æ–Ω: '+str(player.dmg[0]+player.dmgbuff[0])+'-'+str(player.dmg[1]+player.dmgbuff[1])+'\n'
    text+='üèÉ‚Äç‚ôÇÔ∏è–°–∫–æ—Ä–æ—Å—Ç—å: '+str(player.speedregen)+'\n'
    text+='–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞:\n'+
    text+='  –ì–æ–ª–æ–≤–∞: '+armortoname(player.body['head']).lower()+'\n'
    a=''
    b=''
    if player.mainhand=='righthand':
        a='(—Ç–µ–∫—É—â–∞—è)'
    if player.mainhand=='lefthand':
        b='(—Ç–µ–∫—É—â–∞—è) '
    text+='  –ü—Ä–∞–≤–∞—è '+a+'—Ä—É–∫–∞: '+armortoname(player.body['righthand']).lower()+'\n'
    text+='  –õ–µ–≤–∞—è '+b+'—Ä—É–∫–∞: '+armortoname(player.body['lefthand']).lower()+'\n'
    text+='  –¢—É–ª–æ–≤–∏—â–µ: '+armortoname(player.body['body']).lower()+'\n'
    kb=types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='–§–∏–∑. –∞—Ç–∞–∫–∞', callback_data='p_attack'),types.InlineKeyboardButton(text='–°–∫–∏–ª–ª—ã', callback_data='skills'))
    kb.add(types.InlineKeyboardButton(text='–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å', callback_data='inventory'),types.InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å —Ä—É–∫—É', callback_data='handchange'))
    kb.add(types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ö–æ–¥', callback_data='endturn'))
    bot.send_message(player.id, text, reply_markup=kb)
    
    
